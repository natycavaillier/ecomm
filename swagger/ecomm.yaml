openapi: 3.0.1
info:
  title: API de categorias
  description: API para controlar categorias
  version: 0.0.1
servers:
  - url: http://api/
    description: API de Categorias
paths:
  /categories:
    get:
      tags:
        - Categorias
      summary: Recupera todas as categorias
      responses: 
        200:
          description: Sucesso
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Categories'
        404:
          description: Nenhuma categoria encontrada
          content:
            application/json:
              example:
                "Not Found"
  /categories/{id}:
    parameters: 
        - name: id
          in: path
          schema:
            type: integer
          required: true
    get:
      tags:
        - Categorias
      summary: Recupera uma categoria pelo ID
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Category'
        404:
          description: Categoria não encontrada
          content:
            application/json:
              example:
                "Not Found"
  /admin/categories:
    post: 
      tags:
        - Categorias com acesso de admin
      summary: Cria nova categoria
      requestBody:
        content: 
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
      responses:
        201:
          description: Sucesso ao criar categoria
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
  /admin/categories/{id}:
    parameters: 
        - name: id
          in: path
          schema:
            type: integer
          required: true               
    put:
      tags:
        - Categorias com acesso de admin
      summary: Atualiza uma categoria
      requestBody:
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        200:
          description: Sucesso ao atualizar categoria
          content: 
            application/json:
              example:
                "Categoria atualizada com sucesso"
        404:
          description: Categoria não encontrada
          content:
            application/json:
              example:
                "Not Found"
    delete:
      tags:
        - Categorias com acesso de admin
      summary: Exclui uma categoria pelo ID
      responses:
        200:
          description: Sucesso ao deletar categoria
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Category'
        404:
          description: Categoria não encontrada
          content:
            application/json:
              example:
                "Not Found"
  /admin/categories/activate/{id}:
    put:
      tags:
        - Categorias com acesso de admin
      parameters: 
        - name: id
          in: path
          schema:
            type: integer
          required: true
      summary: Ativa uma categoria
      description: Atualiza o status da categoria para 'ATIVA'
      responses:
        200:
          description: Sucesso ao atualizar status para 'ATIVA'
          content: 
            application/json:
              example:
                "Status da categoria atualizado para 'ATIVA' com sucesso"
        404:
          description: Categoria não encontrada
          content:
            application/json:
              example:
                "Not Found"
                
  /products:
    parameters:
        - in: query
          name: minimumPrice
          description: O preço mínimo a ser filtrado
          schema:
            type: number
        - in: query
          name: maximumPrice
          description: O preço máximo a ser filtrado
          schema:
            type: number
        - in: query
          name: categoryId
          description: O id da categoria a ser filtrada
          schema:
            type: string
        - in: query
          name: minimumStock
          description: O estoque mínimo dos produtos a serem filtrados
          schema:
            type: integer
    get:
      tags:
        - Produtos
      summary: Recupera todos os produtos
      responses: 
        200:
          description: Sucesso
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Products'
        404:
          description: Nenhum produto encontrado
          content:
            application/json:
              example:
                "Not Found"
  /products/{id}:
    parameters: 
        - name: id
          in: path
          schema:
            type: integer
          required: true
    get:
      tags:
        - Produtos
      summary: Recupera um produto pelo ID
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Product'
        404:
          description: Produto não encontrado
          content:
            application/json:
              example:
                "Not Found"
  /admin/products:
    post: 
      tags:
        - Produtos com acesso de admin
      summary: Cria novo produto
      requestBody:
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        201:
          description: Sucesso ao criar produto
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
  /admin/products/{id}:
    parameters: 
        - name: id
          in: path
          schema:
            type: integer
          required: true               
    put:
      tags:
        - Produtos com acesso de admin
      summary: Atualiza um produto
      requestBody:
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        200:
          description: Sucesso ao atualizar produto
          content: 
            application/json:
              example:
                "Produto atualizado com sucesso"
        404:
          description: Produto não encontrado
          content:
            application/json:
              example:
                "Not Found"
    delete:
      tags:
        - Produtos com acesso de admin
      summary: Exclui um produto pelo ID
      responses:
        200:
          description: Sucesso ao deletar produto
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Product'
        404:
          description: Produto não encontrado
          content:
            application/json:
              example:
                "Not Found"
                
  /accounts/{id}:
    parameters: 
        - name: id
          in: path
          schema:
            type: integer
          required: true
    get:
      tags:
        - Usuários
      summary: Recupera um usuário pelo ID
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Account'
        404:
          description: Usuário não encontrado
          content:
            application/json:
              example:
                "Not Found"
  /admin/accounts:
    get:
      tags:
        - Usuários com acesso de admin
      summary: Recupera todos os usuários
      responses: 
        200:
          description: Sucesso
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Accounts'
        404:
          description: Nenhum usuário encontrado
          content:
            application/json:
              example:
                "Not Found"
    post: 
      tags:
        - Usuários com acesso de admin
      summary: Cria novo usuário
      requestBody:
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        201:
          description: Sucesso ao criar usuário
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
  /admin/accounts/{id}:
    parameters: 
        - name: id
          in: path
          schema:
            type: integer
          required: true               
    put:
      tags:
        - Usuários com acesso de admin
      summary: Atualiza um usuário
      requestBody:
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        200:
          description: Sucesso ao atualizar usuário
          content: 
            application/json:
              example:
                "Usuário atualizado com sucesso"
        404:
          description: Usuário não encontrado
          content:
            application/json:
              example:
                "Not Found"
    delete:
      tags:
        - Usuários com acesso de admin
      summary: Exclui um usuário pelo ID
      responses:
        200:
          description: Sucesso ao deletar usuário
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Account'
        404:
          description: Usuário não encontrado
          content:
            application/json:
              example:
                "Not Found"
                
  /orders/{id}:
    parameters: 
        - name: id
          in: path
          schema:
            type: integer
          required: true
    get:
      tags:
        - Pedidos
      summary: Recupera um pedido pelo ID
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Order'
        404:
          description: Pedido não encontrado
          content:
            application/json:
              example:
                "Not Found"
  /orders:
    post: 
      tags:
        - Pedidos
      summary: Cria novo pedido
      requestBody:
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        201:
          description: Sucesso ao criar pedido
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
                
components:
  schemas: 
    Category:
      type: object
      properties: 
        id:
          type: string
          format: uuid
        nome:
          type: string
        status:
          type: string
    Categories:
      type: array
      items:
        $ref: '#/components/schemas/Category'
        
    Product:
      type: object
      properties: 
        id:
          type: string
          format: uuid
        nome:
          type: string
        descricao:
          type: string
        slug:
          type: string
        preco:
          type: number
        estoque:
          type: integer
        categoria:
          $ref: '#/components/schemas/Category'
    Products:
      type: array
      items:
        $ref: '#/components/schemas/Product'
  
    Address:
      type: object
      required:
        - rua
        - numero
        - cep
        - cidade
        - uf
      properties:
        rua:
          type: string
        numero:
          type: string
        complemento:
          type: string
        cep:
          type: string
        cidade:
          type: string
        uf:
          type: string
        
  
    Account:
      type: object
      properties: 
        id:
          type: string
          format: uuid
        nome:
          type: string
        email:
          type: string
        senha:
          type: string
        cpf:
          type: string
        telefone:
          type: string
        endereco:
          $ref: '#/components/schemas/Address'
          
    Accounts:
      type: array
      items:
        $ref: '#/components/schemas/Account'
        
    Items:
      type: array
      items:
        properties:
          productId:
            type: integer
          quantidade:
            type: integer
          desconto:
            type: number
          precoUnitario:
            type: number
        
    Order:
      type: object
      properties: 
        id:
          type: string
          format: uuid
        accountId:
          type: string
        enderecoEntrega:
          $ref: '#/components/schemas/Address'
        itens:
          $ref: '#/components/schemas/Items'
          
    Orders:
      type: array
      items:
        $ref: '#/components/schemas/Order'